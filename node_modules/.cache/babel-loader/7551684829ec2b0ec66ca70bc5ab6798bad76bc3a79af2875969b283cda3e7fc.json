{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arnab\\\\filemater-pro\\\\filemaster-frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport FileUploader from '../components/FileUploader';\nimport ConversionOptions from '../components/ConversionOptions';\nimport ProgressIndicator from '../components/ProgressIndicator';\nimport FileInfo from '../components/FileInfo';\nimport DownloadButton from '../components/DownloadButton';\nimport { uploadFile } from '../utils/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [options, setOptions] = useState({});\n  const [processing, setProcessing] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const handleFileSelect = file => {\n    setSelectedFile(file);\n    setResult(null); // Clear previous results\n    setError(null); // Clear previous errors\n  };\n  const handleOptionsChange = newOptions => {\n    setOptions(newOptions);\n  };\n  const handleProcessFile = async () => {\n    if (!selectedFile) {\n      setError('Please select a file first.');\n      return;\n    }\n    setProcessing(true);\n    setProgress(0);\n    setError(null);\n    setResult(null);\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    // Append options to formData\n    for (const key in options) {\n      if (options[key]) {\n        // Only append if value exists\n        formData.append(key, options[key]);\n      }\n    }\n    try {\n      // Simulate progress for demonstration\n      let currentProgress = 0;\n      const interval = setInterval(() => {\n        currentProgress += 10;\n        if (currentProgress <= 90) {\n          setProgress(currentProgress);\n        } else {\n          clearInterval(interval);\n        }\n      }, 200);\n      const response = await uploadFile(formData);\n      clearInterval(interval);\n      setProgress(100);\n      if (response.success) {\n        setResult(response);\n      } else {\n        setError(response.message || 'File processing failed.');\n      }\n    } catch (err) {\n      console.error('Error during file processing:', err);\n      setError(err.message || 'An unexpected error occurred.');\n    } finally {\n      setProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Filemater Pro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your all-in-one solution for file conversion, resizing, and compression.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileUploader, {\n      onFileSelect: handleFileSelect,\n      selectedFile: selectedFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), selectedFile && /*#__PURE__*/_jsxDEV(ConversionOptions, {\n      onOptionsChange: handleOptionsChange,\n      fileType: selectedFile.type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-primary\",\n      onClick: handleProcessFile,\n      disabled: processing || !selectedFile,\n      children: processing ? 'Processing...' : 'Process File'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), processing && /*#__PURE__*/_jsxDEV(ProgressIndicator, {\n      progress: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 22\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this), result && result.success && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: result.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FileInfo, {\n        fileName: result.fileName,\n        fileSize: result.fileSize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DownloadButton, {\n        downloadUrl: result.downloadUrl,\n        fileName: result.fileName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"H6Rd4MzMBxCF//24v8yrji18QfQ=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","FileUploader","ConversionOptions","ProgressIndicator","FileInfo","DownloadButton","uploadFile","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","selectedFile","setSelectedFile","options","setOptions","processing","setProcessing","progress","setProgress","result","setResult","error","setError","handleFileSelect","file","handleOptionsChange","newOptions","handleProcessFile","formData","FormData","append","key","currentProgress","interval","setInterval","clearInterval","response","success","message","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFileSelect","onOptionsChange","fileType","type","onClick","disabled","fileSize","downloadUrl","_c","$RefreshReg$"],"sources":["C:/Users/arnab/filemater-pro/filemaster-frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState } from 'react';\nimport FileUploader from '../components/FileUploader';\nimport ConversionOptions from '../components/ConversionOptions';\nimport ProgressIndicator from '../components/ProgressIndicator';\nimport FileInfo from '../components/FileInfo';\nimport DownloadButton from '../components/DownloadButton';\nimport { uploadFile } from '../utils/api';\n\nfunction Home() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [options, setOptions] = useState({});\n  const [processing, setProcessing] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n\n  const handleFileSelect = (file) => {\n    setSelectedFile(file);\n    setResult(null); // Clear previous results\n    setError(null); // Clear previous errors\n  };\n\n  const handleOptionsChange = (newOptions) => {\n    setOptions(newOptions);\n  };\n\n  const handleProcessFile = async () => {\n    if (!selectedFile) {\n      setError('Please select a file first.');\n      return;\n    }\n\n    setProcessing(true);\n    setProgress(0);\n    setError(null);\n    setResult(null);\n\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    // Append options to formData\n    for (const key in options) {\n      if (options[key]) { // Only append if value exists\n        formData.append(key, options[key]);\n      }\n    }\n\n    try {\n      // Simulate progress for demonstration\n      let currentProgress = 0;\n      const interval = setInterval(() => {\n        currentProgress += 10;\n        if (currentProgress <= 90) {\n          setProgress(currentProgress);\n        } else {\n          clearInterval(interval);\n        }\n      }, 200);\n\n      const response = await uploadFile(formData);\n      clearInterval(interval);\n      setProgress(100);\n\n      if (response.success) {\n        setResult(response);\n      } else {\n        setError(response.message || 'File processing failed.');\n      }\n    } catch (err) {\n      console.error('Error during file processing:', err);\n      setError(err.message || 'An unexpected error occurred.');\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Filemater Pro</h1>\n      <p>Your all-in-one solution for file conversion, resizing, and compression.</p>\n\n      <FileUploader onFileSelect={handleFileSelect} selectedFile={selectedFile} />\n\n      {selectedFile && (\n        <ConversionOptions\n          onOptionsChange={handleOptionsChange}\n          fileType={selectedFile.type}\n        />\n      )}\n\n      <button\n        className=\"button-primary\"\n        onClick={handleProcessFile}\n        disabled={processing || !selectedFile}\n      >\n        {processing ? 'Processing...' : 'Process File'}\n      </button>\n\n      {processing && <ProgressIndicator progress={progress} />}\n\n      {error && <p className=\"error-message\">Error: {error}</p>}\n\n      {result && result.success && (\n        <>\n          <p className=\"success-message\">{result.message}</p>\n          <FileInfo fileName={result.fileName} fileSize={result.fileSize} />\n          <DownloadButton downloadUrl={result.downloadUrl} fileName={result.fileName} />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}